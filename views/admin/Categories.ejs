<%- include('../layout/admin/header.ejs') %>

  <main class="main-wrap">
    <header class="main-header navbar">
      <div class="col-search">
        <form class="searchform">
          <div class="input-group">
            <input list="search_terms" type="text" class="form-control" placeholder="Search term">
            <button class="btn btn-light bg" type="button"> <i class="material-icons md-search"></i></button>
          </div>
          <datalist id="search_terms">
            <option value="Products">
            <option value="New orders">
            <option value="Apple iphone">
            <option value="Ahmed Hassan">
          </datalist>
        </form>
      </div>
      <div class="col-nav">
        <a class="dropdown-item text-danger" href="/admin/logout"><i class="material-icons md-exit_to_app"></i>Logout</a>

    </div>
    </header>
    <section class="content-main">
      <div id="category-management" class="row">
        <div class="card mb-4 col-lg-12">
          <header class="card-header">
            <h4 class="card-title">Category Management</h4>
            <div class="text-end">
              <a href="/admin/addcategories" class="btn btn-primary btn-sm">+ Add New Category</a>
            </div>
          </header>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table align-middle table-nowrap mb-0">
                <thead class="table-light">
                  <tr>
                    <th class="align-middle" scope="col">Category Name</th>
                    <th class="align-middle" scope="col">Date Created</th>
                    <th class="align-middle" scope="col">Listed</th>
                    <th class="align-middle" scope="col">Edit</th>
                    <th class="align-middle" scope="col">Delete</th>
                    <th class="align-middle" scope="col">Apply Offer</th>
                  </tr>
                </thead>
                <tbody id="categoryTable">
                  <% if (categories.length> 0) { %>
                    <% categories.forEach(category=> { %>
                      <tr id="category-<%= category._id %>">
                        <td>
                          <%= category.name %>
                        </td>
                        <td>
                          <%= new Date(category.createdOn).toLocaleString() %>
                        </td>
                        <td>
                          <%= category.listed ? 'Listed' : 'UnListed' %>
                        </td>
                        <td>
                          <a href="#" data-id="<%= category._id %>" class="edit-category" data-bs-toggle="modal"
                            data-bs-target="#editCategoryModal">
                            <i class="fa-solid fa-pen-to-square"></i> Edit
                          </a>

                        </td>
                        <td>
                          <a href="#" data-id="<%= category._id %>" class="delete-category">
                            <i class="fa-solid fa-trash"></i> Delete
                          </a>
                        </td>
                        <td>
                          <% if (category.categoryOffer) { %>
                            <a href="#" data-id="<%= category._id %>" class="remove-offer-category">
                              <i class="fa-solid fa-eraser" style="color: #088178;"></i> Remove offer
                            </a>
                            <% } else { %>
                              <a href="#" data-id="<%= category._id %>" class="apply-offer-category">
                                <i class="fa-solid fa-tags"></i> Apply Offer
                              </a>
                              <% } %>
                        </td>
                      </tr>
                      <% }) %>
                        <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>

      <!-- Modal for Deleting Category -->
      <div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="confirmationModalLabel">Confirm Deletion</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <p>Are you sure you want to delete this item?</p>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
              <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
          </div>
        </div>
      </div>


      <!-- Modal for Editing Category -->
      <div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <label for="editCategoryName">Category Name:</label>
              <input type="text" class="form-control" id="editCategoryName"></input>
              <label for="editCategoryListed">Listed:</label>
              <select class="form-control" id="editCategoryListed">
                <option value="true">Listed</option>
                <option value="false">UnListed</option>
              </select>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
              <button type="button" class="btn btn-primary" id="saveCategoryChangesBtn">Save Changes</button>
            </div>
          </div>
        </div>
      </div>

      <!-- Modal for Applying Offer -->
      <div class="modal fade" id="offerModal" tabindex="-1" aria-labelledby="offerModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="offerModalLabel">Apply Offer</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <label for="offerInput">Offer Percentage:</label>
              <div class="input-group">
                <input type="number" class="form-control" id="offerInput" placeholder="Enter offer percentage">
                <div class="input-group-append">
                  <span class="input-group-text">%</span>
                </div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
              <button type="button" class="btn btn-primary" id="applyOfferBtn">Apply Offer</button>
            </div>
          </div>
        </div>
      </div>

    </section>

    <!-- content-main end// -->

    <script>
      document.addEventListener('DOMContentLoaded', function () {
        // Function to remove modal backdrop
        function removeModalBackdrop() {
          document.body.classList.remove('modal-open');
          document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());
        }

        // Function to hide the modal
        function hideModal() {
          const editCategoryModalEl = document.getElementById('editCategoryModal');
          const editCategoryModal = bootstrap.Modal.getInstance(editCategoryModalEl);
          if (editCategoryModal) {
            editCategoryModal.hide();
          }
          removeModalBackdrop();
        }

        // Add event listener for edit-category buttons
        document.querySelectorAll('.edit-category').forEach(function (button) {
          button.addEventListener('click', function (event) {
            event.preventDefault();

            const categoryId = this.getAttribute('data-id');

            // Fetch category details using the categoryId
            fetch(`/admin/categories/${categoryId}`)
              .then(response => response.json())
              .then(data => {
                if (data.success) {
                  // Populate the modal with the category data
                  document.getElementById('editCategoryName').value = data.category.name;
                  document.getElementById('editCategoryListed').value = data.category.listed.toString();
                  document.getElementById('saveCategoryChangesBtn').setAttribute('data-id', categoryId);

                  // Show the modal
                  var editCategoryModal = new bootstrap.Modal(document.getElementById('editCategoryModal'));
                  editCategoryModal.show();
                } else {
                  // Handle error case
                  Swal.fire('Error', 'Category not found', 'error');
                }
              })
              .catch(error => {
                console.error('Error:', error);
                Swal.fire('Error', 'An error occurred while fetching category details.', 'error');
              });
          });
        });

        // Add event listener for saveCategoryChangesBtn button
        document.getElementById('saveCategoryChangesBtn').addEventListener('click', function () {
          const categoryId = this.getAttribute('data-id');
          const name = document.getElementById('editCategoryName').value.trim();
          const listed = document.getElementById('editCategoryListed').value;

          // Validate form
          if (name === '') {
            Swal.fire('Error', 'Category name is required', 'error');
            return;
          }

          const formData = { name, listed };

          fetch(`/admin/categories/${categoryId}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            },
            body: JSON.stringify(formData)
          })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                // Hide the modal
                hideModal();

                // Update the category in the table
                const row = document.getElementById(`category-${categoryId}`);
                row.querySelector('td:nth-child(1)').innerText = name;
                row.querySelector('td:nth-child(3)').innerText = listed === 'true' ? 'Listed' : 'UnListed';

                // Show success message
                Swal.fire('Success', 'Category updated successfully', 'success');
              } else {
                Swal.fire('Error', data.message, 'error');
              }
            })
            .catch(error => {
              console.error('Error:', error);
              Swal.fire('Error', 'An error occurred while updating the category.', 'error');
            });
        });

        // Add event listener for cancel button
        document.querySelector('#editCategoryModal .btn-secondary').addEventListener('click', hideModal);

        // Add event listener for close button (x) in modal header
        document.querySelector('#editCategoryModal .btn-close').addEventListener('click', hideModal);

        // Add event listener for modal dismissal
        document.getElementById('editCategoryModal').addEventListener('hidden.bs.modal', removeModalBackdrop);
      });
    </script>



    <script>
      document.addEventListener('DOMContentLoaded', function () {
        let categoryIdToDelete = null;

        // Open delete confirmation modal
        document.querySelectorAll('.delete-category').forEach(function (button) {
          button.addEventListener('click', function (event) {
            event.preventDefault();
            categoryIdToDelete = this.getAttribute('data-id');
            var confirmationModal = new bootstrap.Modal(document.getElementById('confirmationModal'));
            confirmationModal.show();
          });
        });

        // Confirm delete button click
        document.getElementById('confirmDeleteBtn').addEventListener('click', function () {
          if (!categoryIdToDelete) return;

          fetch(`/admin/categories/${categoryIdToDelete}`, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            }
          })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                // Remove the deleted row from the table
                document.getElementById(`category-${categoryIdToDelete}`).remove();

                // Hide the modal
                var confirmationModal = bootstrap.Modal.getInstance(document.getElementById('confirmationModal'));
                confirmationModal.hide();

                // Show success message
                Swal.fire('Success', 'Category deleted successfully', 'success');
              } else {
                Swal.fire('Error', data.message, 'error');
              }
            })
            .catch(error => {
              console.error('Error:', error);
              Swal.fire('Error', 'An error occurred while deleting the category.', 'error');
            });
        });
      });
    </script>



    <%- include('../layout/admin/footer.ejs') %>